package gql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"graphql-project/core"
	"graphql-project/domain/model"
	"graphql-project/domain/model/input"

	fiber "github.com/gofiber/fiber/v2"
)

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, email string, password string) (string, error) {
	return r.Resolver.Login(ctx, email, password)
}

// NewUser is the resolver for the newUser field.
func (r *mutationResolver) NewUser(ctx context.Context, user input.NewUser) (model.User, error) {
	return r.userRepository.CreateUser(ctx, &user)
}

// User is the resolver for the user field.
func (r *mutationResolver) User(ctx context.Context, id int64, user input.User) (model.User, error) {
	id, ok := core.CheckUserId(ctx, id)
	if !ok {
		return model.User{}, fiber.ErrForbidden
	}
	return r.userRepository.UpdateUser(ctx, id, &user)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
